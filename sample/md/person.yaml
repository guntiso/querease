name: person
fields:
- id
- name
- surname
- sex
- mother_id
- father_id

name:  person_info
table: person p
fields:
- name
- surname
- sex
- mother.name
- father.name
- maternal_grandmother = mother.mother.name
- maternal_grandfather = mother.father.name
- paternal_grandmother = father.mother.name
- paternal_grandfather = father.father.name
- children * [p.id in (c.mother_id, c.father_id)] person_name
- father *..1 [f.id = p.father_id]:
    table:  person f
    fields:
      - name
      - surname
    order:  name
order:
- name
- surname

name:   person_name
table:  person c
fields: name
order:  name

name:  person_info_alt
table: person p
fields:
- name
- surname
- sex
- mother.name
- father.name
- maternal_grandmother = mother.mother.name
- maternal_grandfather = mother.father.name
- paternal_grandmother = father.mother.name
- paternal_grandfather = father.father.name
- children * [p.id in (c.mother_id, c.father_id)]:
    table:  person c
    fields: name
    order:  name
- father *..1 [f.id = p.father_id]:
    table:  person f
    fields:
      - name
      - surname
    order:  name
order:
- name
- surname

name:  siblings
table:
joins: (person p1 [p1.mother_id = p2.mother_id | p1.father_id = p2.father_id] person p2
        [p1.name != p2.name] {p1.name sibling1, p2.name sibling2}
        +
        person p1[(person p2[(p1.mother_id = p2.mother_id | p1.father_id = p2.father_id) & p1.id != p2.id])]
        {name, null}) x_
fields:
- sibling1
- x_.sibling2
order:
- sibling1
- x_.sibling2

name:  siblings_alt
table: person p
joins: p[p.id = x_.id](person p1 [p1.mother_id = p2.mother_id | p1.father_id = p2.father_id] person p2
        [p1.name != p2.name] {p1.id, p2.name sibling2}
        +
        person p1[(person p2[(p1.mother_id = p2.mother_id | p1.father_id = p2.father_id) & p1.id != p2.id])]
        {p1.id, null}) x_
fields:
- sibling1 = name
- x_.sibling2
order:
- name
- x_.sibling2

# hierarchy
name:  father_tree
table: person
fields:
- id
- name
- sons * [:1(id) = father_id] father_tree
filter:
- father_id = null # first filter is for selecting roots, it is dropped for child queries!
- sex = 'M'
order:
- name
- id


name: person_choice_without_resolver
table: person
fields:
- full_name = name || ' ' || surname || ' (#1)'

name: person_choice_resolver_implied
table: person
fields:
- full_name = name || ' ' || surname || ' (#2)' -> id

name: person_choice_resolver_provided
table: person
fields:
- full_name = name || ' ' || surname || ' (#3)' -> id = person[name || ' ' || surname || ' (#4)' = _]{id}

name: person_multifield_choice_resolver_implied
table: person
fields:
- name
- full_name = name || ' ' || surname || ' (#5)' -> id

name: person_multifield_choice_resolver_provided
table: person
fields:
- name
- full_name = name || ' ' || surname || ' (#6)' -> id = person[name || ' ' || surname || ' (#7)' = _]{id}

name: person_multitable_choice_resolver_implied_1
table: person
fields:
- full_name = name || ' ' || surname || ' of ' || father.name || ' (#7)'

name: person_multitable_choice_resolver_implied_2
table: person p1
fields:
- full_name = name || ' ' || surname || ' of ' || father.name || ' (#8)'

name: resolver_test_person_1
table: person
fields:
- id
- mother = mother.name || mother.surname -> mother_id
- father = father.name || father.surname -> father_id = person[name || surname = _]{id}

name: resolver_test_person_2
table: person p2
fields:
- id
- mother = ^person_choice_without_resolver.full_name[p2.mother_id]
- father = ^person_choice_without_resolver.full_name[id = p2.father_id] -> father_id
- empty_expression_test =

name: ref_expression_test_person_2b
table: person p2
fields:
- id
- mother = ^person_choice_without_resolver.full_name -> mother_id
- father = ^person_choice_without_resolver.full_name -> father_id

name: ref_expression_test_person_2c
table: person p2
fields:
- id
- mother = ^person_choice_without_resolver.full_name
- father = ^person_choice_without_resolver.full_name

# resolver reuse
name: resolver_test_person_3
table: person p3
fields:
- id
- mother = ^person_choice_resolver_implied.full_name[p3.mother_id = id + 3] -> mother_id
- father = ^person_choice_resolver_provided.full_name -> father_id

# resolver override
name: resolver_test_person_4
table: person
fields:
- id
- mother = ^person_choice_resolver_implied.full_name -> mother_id = 1
- father = ^person_choice_resolver_provided.full_name -> father_id = 2

# resolver reuse (multifield choice)
name: resolver_test_person_5
table: person p5
fields:
- id
- mother = ^person_multifield_choice_resolver_implied.full_name[p5.mother_id = id + 5] -> mother_id
- father = ^person_multifield_choice_resolver_provided.full_name -> father_id

# resolver override (multifield choice)
name: resolver_test_person_6
table: person p6
fields:
- id
- mother = ^person_multifield_choice_resolver_implied.full_name -> mother_id = 3
- father = ^person_multifield_choice_resolver_provided.full_name -> father_id = 4

# refarenced resolver with multiple table expression
name: resolver_test_person_7
table: person p7
fields:
- mother = ^person_multitable_choice_resolver_implied_1.full_name ->

name: resolver_test_person_8
table: person p8
fields:
- mother = ^person_multitable_choice_resolver_implied_2.full_name ->
